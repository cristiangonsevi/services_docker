#!/usr/bin/env bash
set -euo pipefail

# --- Config (modifica si quieres) ---
FRP_VERSION="${FRP_VERSION:-0.65.0}"
FRP_DIST="frp_${FRP_VERSION}_linux_amd64"
FRP_TAR_URL="${FRP_TAR_URL:-https://github.com/fatedier/frp/releases/download/v${FRP_VERSION}/${FRP_DIST}.tar.gz}"

INSTALL_BIN_DIR="${INSTALL_BIN_DIR:-/usr/local/bin}"
CONFIG_DIR="${CONFIG_DIR:-/etc/frp}"
SERVICE_PATH="${SERVICE_PATH:-/etc/systemd/system/frps.service}"

# Valores de frps.toml (usa las tuyas; ya pre-llenadas según tu mensaje)
BIND_PORT="${BIND_PORT:-7000}"
VHOST_HTTP_PORT="${VHOST_HTTP_PORT:-7080}"
VHOST_HTTPS_PORT="${VHOST_HTTPS_PORT:-4443}"
SUBDOMAIN_HOST="${SUBDOMAIN_HOST:-crisego.com}"
AUTH_METHOD="${AUTH_METHOD:-token}"
AUTH_TOKEN="${AUTH_TOKEN:-mytoken}"
WEB_ADDR="${WEB_ADDR:-0.0.0.0}"
WEB_PORT="${WEB_PORT:-7500}"
WEB_USER="${WEB_USER:-admin}"
WEB_PASSWORD="${WEB_PASSWORD:-mypass}"

# --- Helpers ---
echo_stderr() { echo "$@" >&2; }

# Re-run with sudo if not root
if [ "$(id -u)" -ne 0 ]; then
  echo_stderr "No eres root. Re-ejecutando con sudo..."
  exec sudo bash "$0" "$@"
fi

echo "Instalador FRP v${FRP_VERSION}"
echo "URL: ${FRP_TAR_URL}"
echo

# Check required commands
for cmd in curl tar systemctl; do
  if ! command -v "$cmd" >/dev/null 2>&1; then
    echo_stderr "Error: '$cmd' no está instalado. Instálalo y vuelve a ejecutar."
    exit 1
  fi
done

TMPDIR="$(mktemp -d)"
cleanup() { rm -rf "$TMPDIR"; }
trap cleanup EXIT

cd "$TMPDIR"

echo "Descargando ${FRP_TAR_URL}..."
if ! curl -fsSL -o frp.tar.gz "$FRP_TAR_URL"; then
  echo_stderr "Falló la descarga. Revisa la URL: ${FRP_TAR_URL}"
  exit 1
fi

echo "Extrayendo..."
tar -xzf frp.tar.gz

if [ ! -d "${FRP_DIST}" ]; then
  # si la estructura es distinta, trata de encontrar el directorio extraído
  extracted_dir="$(tar -tzf frp.tar.gz | head -n1 | cut -d/ -f1)"
  if [ -n "$extracted_dir" ] && [ -d "$extracted_dir" ]; then
    FRP_DIST="$extracted_dir"
  else
    echo_stderr "No pude encontrar el directorio extraído."
    exit 1
  fi
fi

cd "$FRP_DIST"

# Verifica existencia de binarios
if [ ! -f frps ] && [ ! -f frpc ]; then
  echo_stderr "Los binarios frps/frpc no fueron encontrados en el paquete."
  exit 1
fi

echo "Instalando binarios en ${INSTALL_BIN_DIR}..."
install -m 0755 frps "${INSTALL_BIN_DIR}/frps" || true
if [ -f frpc ]; then
  install -m 0755 frpc "${INSTALL_BIN_DIR}/frpc" || true
fi

# Crear directorio de configuración
echo "Creando directorio de configuración ${CONFIG_DIR}..."
mkdir -p "${CONFIG_DIR}"
chmod 0755 "${CONFIG_DIR}"

FRPS_CONF="${CONFIG_DIR}/frps.toml"
echo "Escribiendo configuración en ${FRPS_CONF}..."
cat > "${FRPS_CONF}" <<EOF
# frps configuration generated by install_frps.sh
bindPort = ${BIND_PORT}
vhostHttpPort = ${VHOST_HTTP_PORT}
vhostHttpsPort = ${VHOST_HTTPS_PORT}
subdomainHost = "${SUBDOMAIN_HOST}"

auth.method = "${AUTH_METHOD}"
auth.token = "${AUTH_TOKEN}"

webServer.addr = "${WEB_ADDR}"
webServer.port = ${WEB_PORT}
webServer.user = "${WEB_USER}"
webServer.password = "${WEB_PASSWORD}"
EOF

chmod 0644 "${FRPS_CONF}"

# Crear el servicio systemd (tal como lo proporcionaste)
echo "Creando servicio systemd en ${SERVICE_PATH}..."
cat > "${SERVICE_PATH}" <<'SERVICE_EOF'
[Unit]
Description=FRP Server Service
After=network.target

[Service]
Type=simple
ExecStart=/usr/local/bin/frps -c /etc/frp/frps.toml
Restart=on-failure
User=nobody
Group=nogroup

[Install]
WantedBy=multi-user.target
SERVICE_EOF

# Asegúrate de que el grupo 'nogroup' exista (en algunas distros es 'nobody' o 'nfsnobody')
if ! getent group nogroup >/dev/null 2>&1; then
  echo "Grupo 'nogroup' no existe en este sistema. Intentando crear 'nogroup' (sin password)."
  # Crear grupo solo si no existe; en sistemas donde no se permite crear, fallará silenciosamente
  groupadd -r nogroup || echo "No se pudo crear 'nogroup'. Asegúrate de que el servicio use un grupo válido."
fi

# Recarga systemd, habilita y arranca
echo "Recargando systemd..."
systemctl daemon-reload

echo "Habilitando servicio frps..."
systemctl enable frps.service --now

echo
echo "Intentando iniciar/reiniciar frps..."
if systemctl restart frps.service; then
  echo "Servicio frps iniciado correctamente."
else
  echo_stderr "Hubo un problema al iniciar frps. Revisa 'journalctl -u frps -n 200' para más detalles."
fi

# Mostrar status rápido
echo
echo "Estado breve del servicio:"
systemctl status frps.service --no-pager --full | sed -n '1,12p'

echo
echo "Instalación completada."
echo "Archivo de configuración: ${FRPS_CONF}"
echo "Binaries: ${INSTALL_BIN_DIR}/frps ${INSTALL_BIN_DIR}/frpc (si estaba presente)"
echo
echo "Notas:"
echo " - Abre los puertos en tu firewall: ${BIND_PORT} (frp), ${VHOST_HTTP_PORT} (vhost HTTP), ${VHOST_HTTPS_PORT} (vhost HTTPS), ${WEB_PORT} (dashboard)."
echo " - Si usas Cloudflare u otro proxy delante (como mencionaste antes), recuerda permitir tráfico directo a estos puertos o configurar proxys inversos (Nginx) según tu arquitectura."
echo " - Para ver logs: journalctl -u frps -f"
