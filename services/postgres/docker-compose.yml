services:
  postgres_service:
    image: postgres:18-alpine
    container_name: postgres_container
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5434:5432"
    volumes:
      - ../../data/postgres:/var/lib/postgresql
      - ../../data/backup:/backup
      - ./postgresql.conf:/etc/postgresql/postgresql.conf:ro
    command: >
      postgres -c config_file=/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 500M
        reservations:
          cpus: '0.25'
          memory: 256M
    networks:
      - dbnet

  backup_service:
    image: postgres:18-alpine
    container_name: postgres_backup_container
    depends_on:
      postgres_service:
        condition: service_healthy
    env_file: .env
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ../../data/backup:/backup
      - ./backup_script.sh:/backup_script.sh:ro
    command: ["sh", "/backup_script.sh"]
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 64M
        reservations:
          cpus: '0.05'
          memory: 32M
    networks:
      - dbnet

networks:
  dbnet:

volumes:
  pgdata:
